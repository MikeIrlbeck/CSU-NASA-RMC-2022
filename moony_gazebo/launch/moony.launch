<launch>
    <param name="robot_description" command="$(find xacro)/xacro '$(find moony_description)/robot/robot_skid.xacro'" />
   
        <arg name="x" value="0.0" />
        <arg name="y" value="0.0" />
        <arg name="z" value=".5" />
        <arg name="robot_name" value="moony" />
   
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -x $(arg x) -y $(arg y) -z $(arg z)  -model $(arg robot_name) -param robot_description"/>
 
 
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <!-- <rosparam file="$(find moony_description)/config/moony_controller.yaml" command="load"/> -->
    <rosparam file="$(find moony_description)/config/skid_drive.yaml" command="load" />

    <!-- load the controllers -->

    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen"  ns="/moony" args="joint_state_controller" />
    <!-- ns="/moony" -->
    <!-- joint_state_controller front_mobile_base_controller rear_mobile_base_controller -->

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/moony/joint_states" />
    </node>
	
    <node pkg="moony_odometry" type="moony_odometry_node" name="odometry_publisher"  output="screen">
    </node>
</launch>